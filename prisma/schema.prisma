generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransmissionType {
  automatic
  manual
}

enum role {
  user
  admin
}

enum BodyType {
  suv
  saloon
  van
  pickup
}

enum fuelType {
  petrol
  diesel
  electric
  hybrid
}

model User {
  id              Int        @id @default(autoincrement())
  username        String     @unique
  role            String     @default("user")
  email           String     @unique
  password_digest String
  imageUrl        String?
  phone           String?    @unique
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  reviews         Review[]
  bookings        Booking[]
  favorites       Favorite[]
}

model Location {
  id      Int    @id @default(autoincrement())
  name    String @unique
  address String
  phone   String
}

model Car {
  id               Int        @id @default(autoincrement())
  modelName        String
  image            String
  year             Int
  pricePerDay      Int
  transmissionType String
  bodyType         String
  fuelConsumption  String
  noOfSeats        Int
  fuelType         String
  isRented         Boolean    @default(false)
  rating           Int        @default(5)
  location         String?    @unique
  createdAt        DateTime   @default(now())
  reviews          Review[]
  bookings         Booking[]
  favorites        Favorite[]
}

model Review {
  id        Int      @id @default(autoincrement())
  car       Car      @relation(fields: [carId], references: [id])
  carId     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  body      String
  title     String
  rating    Int
}

model Booking {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  car         Car      @relation(fields: [carId], references: [id])
  carId       Int
  startDate   DateTime
  endDate     DateTime
  pickupTime  DateTime
  dropoffTime DateTime
  phoneNumber Int
  totalPrice  Int
  createdAt   DateTime @default(now())
}

model Favorite {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  car    Car  @relation(fields: [carId], references: [id])
  carId  Int
}
